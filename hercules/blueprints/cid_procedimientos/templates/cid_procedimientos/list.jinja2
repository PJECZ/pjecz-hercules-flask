{% extends 'layouts/app.jinja2' %}
{% import 'macros/list.jinja2' as list %}
{% import 'macros/modals.jinja2' as modals %}
{% import 'macros/topbar.jinja2' as topbar %}

{% block title %}{{ titulo }}{% endblock %}

{% block topbar_actions %}
    {% call topbar.page_buttons(titulo) %}
        {# Si puede elaborar procedimientos, mostrar ir a procedimientos de mis areas #}
        {% if mostrar_boton_procedimientos_de_mis_areas %}
            {{ topbar.button_previous('Procedimientos de mis áreas', url_for('cid_procedimientos.list_active') + '?cid_areas_ids=' + current_user_cid_areas_ids) }}
        {% endif %}
        {% if mostrar_boton_listado_por_defecto %}
            {{ topbar.button_previous('Listado por defecto', url_for('cid_procedimientos.list_active')) }}
        {% endif %}
        {% if current_user.can_admin('CID PROCEDIMIENTOS') %}
            {% if estatus == 'A' %}{{ topbar.button_list_inactive('Inactivos', url_for('cid_procedimientos.list_inactive')) }}{% endif %}
            {% if estatus == 'B' %}{{ topbar.button_list_active('Activos', url_for('cid_procedimientos.list_active')) }}{% endif %}
        {% endif %}
        {% if current_user.can_insert('CID PROCEDIMIENTOS') %}
            {{ topbar.button_new('Nuevo Procedimiento', url_for('cid_procedimientos.new')) }}
        {% endif %}
        {{ topbar.button_dashboard('Tablero', url_for('cid_procedimientos.dashboard')) }}
    {% endcall %}
{% endblock %}

{% block content %}
    {% call list.card() %}
        <!-- Filtros CID Procedimientos -->
        <div class="row">
            <div class="col">
                <form class="row g-1 mb-3" id="filtradorForm" onsubmit="filtrosCidProcedimientos.buscar(); return false;">
                    <div class="col-2">
                        <div class="form-floating">
                            <input id="filtroCodigo" type="text" class="form-control" aria-label="Código" style="text-transform: uppercase;">
                            <label for="filtroCodigo">Código</label>
                        </div>
                    </div>
                    <div class="col-4">
                        <div class="form-floating">
                            <input id="filtroTituloProcedimiento" type="text" class="form-control" aria-label="Procedimiento" style="text-transform: uppercase;">
                            <label for="filtroTituloProcedimiento">Procedimiento</label>
                        </div>
                    </div>
                    <div class="col-6 text-end">
                        <button title="Buscar" class="btn btn-primary btn-lg" onclick="filtrosCidProcedimientos.buscar(); return false;" id="button-buscar"><span class="iconify" data-icon="mdi:magnify"></span></button>
                        <button title="Limpiar" class="btn btn-warning btn-lg" type="reset" onclick="filtrosCidProcedimientos.limpiar();" id="button-limpiar"><span class="iconify" data-icon="mdi:broom"></span></button>
                    </div>
                </form>
            </div>
        </div>
        <!-- DataTable CID Procedimientos -->
        <table id="cid_procedimientos_datatable" class="table {% if estatus == 'B'%}table-dark{% endif %} display nowrap" style="width:100%">
            <thead>
                <tr>
                    <th>Código</th>
                    <th>Procedimiento</th>
                    <th>Fecha</th>
                    <th>Seguimiento</th>
                </tr>
            </thead>
        </table>
    {% endcall %}
{% endblock %}

{% block custom_javascript %}
    {{ modals.custom_javascript('Exportar a XLSX', '', 'ExportXLSX') }}
    <script src="/static/js/datatables-constructor.js"></script>
    <script src="/static/js/datatables-filtros.js"></script>
    <script>
        // DataTable CID Procedimientos
        const constructorDataTable = new ConfigDataTable( '{{ csrf_token() }}' );
        let configDataTable = constructorDataTable.config();
        configDataTable['ajax']['url'] = '/cid_procedimientos/datatable_json';
        configDataTable['ajax']['data'] = {{ filtros }};
        configDataTable['columns'] = [
            { data: 'detalle' },
            { data: 'titulo_procedimiento' },
            { data: 'fecha' },
            { data: 'seguimiento' },
        ];
        configDataTable['columnDefs'] = [
            {
                targets: 0, // detalle
                data: null,
                render: function(data, type, row, meta) {
                    return '<a href="' + data.url + '">' + data.codigo + '</a>';
                }
            },
            {
                targets: 1, // titulo_procedimiento
                data: null,
                render: function(data, type, row, meta) {
                    if (data.length > 64)
                        return '<span title="' + data + '">' + data.substring(0, 64) + '…</span>';
                    return data;
                }
            },
            {
                targets: 3, // seguimiento
                data: null,
                render: function(data, type, row, meta) {
                    switch (data)    {
                        case "EN ELABORACION":  return '<span class="badge rounded-pill bg-yellow text-dark"><span class="iconify" data-icon="mdi:account-edit"></span> EN ELABORACION </span>';   break;
                        case "ELABORADO":       return '<span class="badge rounded-pill bg-warning text-dark"><span class="iconify" data-icon="mdi:account-check"></span> ELABORADO </span>';   break;
                        case "EN REVISION":     return '<span class="badge rounded-pill bg-blue"><span class="iconify" data-icon="mdi:account-search"></span> EN REVISION </span>';   break;
                        case "REVISADO":        return '<span class="badge rounded-pill bg-primary"><span class="iconify" data-icon="mdi:file-check"></span> REVISADO </span>';   break;
                        case "EN AUTORIZACION": return '<span class="badge rounded-pill bg-green"><span class="iconify" data-icon="mdi:file-document-check"></span> EN AUTORIZACION </span>';  break;
                        case "AUTORIZADO":      return '<span class="badge rounded-pill bg-success"><span class="iconify" data-icon="mdi:shield-check"></span> AUTORIZADO </span>';  break;
                    }
                    return data;
                }
            }
        ];
        // Filtros CID Procedimientos
        const filtrosCidProcedimientos = new FiltrosDataTable('#cid_procedimientos_datatable', configDataTable);
        filtrosCidProcedimientos.agregarInput('filtroCodigo', 'codigo');
        filtrosCidProcedimientos.agregarInput('filtroTituloProcedimiento', 'titulo_procedimiento');
        filtrosCidProcedimientos.precargar();
    </script>
{% endblock %}
