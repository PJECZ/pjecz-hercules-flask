{% extends 'layouts/app.jinja2' %}
{% import 'macros/detail.jinja2' as detail %}
{% import 'macros/modals.jinja2' as modals %}
{% import 'macros/topbar.jinja2' as topbar %}

{% block title %}Autoridad {{ autoridad.clave }}{% endblock %}

{% block topbar_actions %}
    {% call topbar.page_buttons('Autoridad ' + autoridad.clave) %}
        {{ topbar.button_previous('Autoridades', url_for('autoridades.list_active')) }}
        {% if current_user.can_edit('AUTORIDADES') %}
            {{ topbar.button_edit('Editar', url_for('autoridades.edit', autoridad_id=autoridad.id)) }}
        {% endif %}
        {% if current_user.can_admin('AUTORIDADES') %}
            {% if autoridad.estatus == 'A' %}{{ topbar.button_delete('Eliminar', url_for('autoridades.delete', autoridad_id=autoridad.id)) }}{% endif %}
            {% if autoridad.estatus == 'B' %}{{ topbar.button_recover('Recuperar', url_for('autoridades.recover', autoridad_id=autoridad.id)) }}{% endif %}
        {% endif %}
    {% endcall %}
{% endblock %}

{% block content %}
    {% call detail.card(estatus=autoridad.estatus) %}
        <div class="row">
            <div class="col-md-6">
                {# detail.label_value_big('Clave', autoridad.clave) #}
                {% if current_user.can_view("DISTRITOS") %}
                    {{ detail.label_value('Distrito', autoridad.distrito.nombre, url_for('distritos.detail', distrito_id=autoridad.distrito_id)) }}
                {% else %}
                    {{ detail.label_value('Distrito', autoridad.distrito.nombre) }}
                {% endif %}
                {% if current_user.can_view("MUNICIPIOS") %}
                    {{ detail.label_value('Municipio', autoridad.municipio.nombre, url_for('municipios.detail', municipio_id=autoridad.municipio_id)) }}
                {% else %}
                    {{ detail.label_value('Municipio', autoridad.municipio.nombre) }}
                {% endif %}
                {{ detail.label_value('Descripción', autoridad.descripcion) }}
                {{ detail.label_value('Descripción corta', autoridad.descripcion_corta) }}
                {# detail.label_value('Creado', moment(autoridad.creado).format('llll')) #}
            </div>
            <div class="col-md-6">
                {{ detail.label_value_boolean('Es Archivo Solicitante', autoridad.es_archivo_solicitante, ignore_is_false=True) }}
                {{ detail.label_value_boolean('Es CEMASC', autoridad.es_cemasc, ignore_is_false=True) }}
                {{ detail.label_value_boolean('Es Defensoría', autoridad.es_defensoria, ignore_is_false=True) }}
                {{ detail.label_value_boolean('Es Extinto', autoridad.es_extinto, ignore_is_false=True) }}
                {{ detail.label_value_boolean('Es Jurisdiccional', autoridad.es_jurisdiccional, ignore_is_false=True) }}
                {{ detail.label_value_boolean('Es Notaría', autoridad.es_notaria, ignore_is_false=True) }}
                {{ detail.label_value_boolean('Es Órgano Especializado', autoridad.es_organo_especializado, ignore_is_false=True) }}
                {{ detail.label_value_boolean('Es revisor de escrituras', autoridad.es_revisor_escrituras, ignore_is_false=True) }}
            </div>
        </div>
    {% endcall %}
    {% if autoridad.es_jurisdiccional and not autoridad.es_notaria %}
        <div class="row">
            <div class="col-md-3">
                {% call detail.card(title='Agenda de audiencias') %}
                    <div style="height: 150px"></div>
                {% endcall %}
            </div>
            <div class="col-md-3">
                {% call detail.card(title='Edictos') %}
                    <div style="height: 250px">
                        <div class="my-4">
                            <canvas id="canvasEdictos"></canvas>
                        </div>
                        <div class="row">
                            <div class="col">
                                {{ detail.button_md(label='Listado', url=url_for('edictos.list_active')+'?autoridad_clave='+autoridad.clave, icon='mdi:file-check', color_class='btn-outline-secondary') }}
                            </div>
                            <div class="col">
                                {{ detail.button_md(label='Tablero', url=url_for('edictos.dashboard')+'?autoridad_clave='+autoridad.clave, icon='mdi:file-check', color_class='btn-outline-secondary') }}
                            </div>
                        </div>
                    </div>
                {% endcall %}
            </div>
            <div class="col-md-3">
                {% call detail.card(title='Listas de Acuerdos') %}
                    <div style="height: 150px">
                        {{ detail.button_md(label='Listado', url=url_for('listas_de_acuerdos.list_active')+'?autoridad_clave='+autoridad.clave, icon='mdi:file-document', color_class='btn-outline-secondary') }}
                    </div>
                {% endcall %}
            </div>
            <div class="col-md-3">
                {% call detail.card(title='V.P. de Sentencias') %}
                    <div style="height: 250px">
                        <div class="my-4">
                            <canvas id="canvasSentencias"></canvas>
                        </div>
                        <div class="row">
                            <div class="col">
                                {{ detail.button_md(label='Listado', url=url_for('sentencias.list_active')+'?autoridad_clave='+autoridad.clave, icon='mdi:gavel', color_class='btn-outline-secondary') }}
                            </div>
                            <div class="col">
                                {{ detail.button_md(label='Tablero', url=url_for('sentencias.dashboard')+'?autoridad_clave='+autoridad.clave, icon='mdi:gavel', color_class='btn-outline-secondary') }}
                            </div>
                        </div>
                    </div>
                {% endcall %}
            </div>
        </div>
    {% endif %}
    {% if current_user.can_view('USUARIOS') %}
        {% call detail.card('Usuarios') %}
            <!-- Filtros Usuarios -->
            <div class="row">
                <div class="col">
                    <form class="row g-1 mb-3" id="filtradorForm" onsubmit="filtrosDTUsuarios.buscar(); return false;">
                        <div class="col-3">
                            <div class="form-floating">
                                <input id="filtroEMail" type="text" class="form-control" aria-label="email">
                                <label for="filtroEMail">e-mail</label>
                            </div>
                        </div>
                        <div class="col-3">
                            <div class="form-floating">
                                <input id="filtroNombres" type="text" class="form-control" aria-label="Nombres" style="text-transform: uppercase;">
                                <label for="filtroNombres">Nombres</label>
                            </div>
                        </div>
                        <div class="col-3">
                            <div class="form-floating">
                                <input id="filtroApellidoPaterno" type="text" class="form-control" aria-label="Apellido paterno" style="text-transform: uppercase;">
                                <label for="filtroApellidoPaterno">Primer paterno</label>
                            </div>
                        </div>
                        <div class="col-3 text-end">
                            <button title="Buscar" class="btn btn-primary btn-lg" onclick="filtrosDTUsuarios.buscar(); return false;" id="button-buscar"><span class="iconify" data-icon="mdi:magnify"></span></button>
                            <button title="Limpiar" class="btn btn-warning btn-lg" type="reset" onclick="filtrosDTUsuarios.limpiar();" id="button-limpiar"><span class="iconify" data-icon="mdi:broom"></span></button>
                        </div>
                    </form>
                </div>
            </div>
            <!-- Datatable Usuarios -->
            <table id="usuarios_datatable" class="table display nowrap" style="width:100%">
                <thead>
                    <tr>
                        <th>Correo electrónico</th>
                        <th>Nombre completo</th>
                        <th>CURP</th>
                        <th>Puesto</th>
                        <th>Oficina</th>
                    </tr>
                </thead>
            </table>
        {% endcall %}
    {% endif %}
{% endblock %}

{% block custom_javascript %}
    <!-- Eliminar y recuperar -->
    {% if current_user.can_edit('AUTORIDADES') %}
        {% if autoridad.estatus == 'A' %}{{ modals.custom_javascript_delete('Eliminar', '¿Eliminar a ' + autoridad.clave + '?') }}{% endif %}
        {% if autoridad.estatus == 'B' %}{{ modals.custom_javascript_recover('Recuperar', '¿Recuperar a ' + autoridad.clave + '?') }}{% endif %}
    {% endif %}
    <!-- DataTable -->
    <script src="/static/js/datatables-constructor.js"></script>
    <script src="/static/js/datatables-filtros.js"></script>
    {% if current_user.can_view('USUARIOS') %}
        <script>
            // DataTable usuarios
            const constructorDataTable = new ConfigDataTable( '{{ csrf_token() }}' );
            let configDTUsuarios = constructorDataTable.config();
            configDTUsuarios['ajax']['url'] = '/usuarios/datatable_json';
            configDTUsuarios['ajax']['data'] = { 'estatus': "A", 'autoridad_id': {{ autoridad.id }} };
            configDTUsuarios['columns'] = [
                { data: "detalle" },
                { data: "nombre" },
                { data: "curp" },
                { data: "puesto" },
                { data: "oficina" }
            ];
            configDTUsuarios['columnDefs'] = [
                {
                    targets: 0, // detalle
                    data: null,
                    render: function(data, type, row, meta) {
                        return '<a href="' + data.url + '">' + data.email + '</a>';
                    }
                },
                {
                    targets: [1, 3], // nombre, puesto
                    data: null,
                    render: function(data, type, row, meta) {
                        return (data.length > 24 ? data.substring(0, 24) + '…' : data);
                    }
                },
                {
                    targets: 2, // curp
                    data: null,
                    render: function(data, type, row, meta) {
                        if (data.length > 4) {
                            return '<span title="' + data + '">' + data.substring(0, 4) + '...</span>';
                        }
                        return data;
                    }
                },
                {
                    targets: 4, // oficina
                    data: null,
                    render: function(data, type, row, meta) {
                        if (data.url === "") {
                            return data.clave;
                        }
                        return '<a href="' + data.url + '">' + data.clave + '</a>';
                    }
                }
            ];
            // Filtros usuarios
            const filtrosDTUsuarios = new FiltrosDataTable('#usuarios_datatable', configDTUsuarios);
            filtrosDTUsuarios.agregarInput('filtroEMail', 'email');
            filtrosDTUsuarios.agregarInput('filtroNombres', 'nombres');
            filtrosDTUsuarios.agregarInput('filtroApellidoPaterno', 'apellido_paterno');
            filtrosDTUsuarios.precargar();
        </script>
    {% endif %}
    <!-- Chart.js -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.3.2/dist/chart.umd.js" integrity="sha384-eI7PSr3L1XLISH8JdDII5YN/njoSsxfbrkCTnJrzXt+ENP5MOVBxD+l6sEG4zoLp" crossorigin="anonymous"></script>
    <script>
        // Cuando se haya cargado la página
        $(document).ready(function() {
            // Obtener los canvas
            const ctxEdictos = document.getElementById('canvasEdictos')
            const ctxSentencias = document.getElementById('canvasSentencias')
            // Preparar los parámetros
            const getParams = new URLSearchParams({
                autoridad_clave: '{{ autoridad.clave }}',
                cantidad_dias: 5,
            })
            // Graficar Edictos
            fetch(`/edictos/tablero_cantidades_por_dia_json?${getParams}`)
                .then(response => response.json())
                .then(data => {
                    const configChart = {
                        type: 'bar',
                        data: {
                            labels: data.labels,
                            datasets: [{
                                label: 'Edictos',
                                data: data.data,
                                backgroundColor: 'rgba(54, 162, 235, 0.2)',
                                borderColor: 'rgba(54, 162, 235, 1)',
                                borderWidth: 1
                            }]
                        },
                        options: {
                            animation: false,
                            plugins: {
                                legend: {
                                    display: false
                                }
                            },
                            responsive: true,
                            scales: {
                                y: {
                                    beginAtZero: true
                                }
                            }
                        }
                    }
                    const chart = new Chart(ctxEdictos, configChart)
                })
                .catch(error => console.error('Error:', error));
            // Graficar Sentencias
            fetch(`/sentencias/tablero_cantidades_por_dia_json?${getParams}`)
                .then(response => response.json())
                .then(data => {
                    const configChart = {
                        type: 'bar',
                        data: {
                            labels: data.labels,
                            datasets: [{
                                label: 'V.P. de Sentencias',
                                data: data.data,
                                backgroundColor: 'rgba(54, 162, 235, 0.2)',
                                borderColor: 'rgba(54, 162, 235, 1)',
                                borderWidth: 1
                            }]
                        },
                        options: {
                            animation: false,
                            plugins: {
                                legend: {
                                    display: false
                                }
                            },
                            responsive: true,
                            scales: {
                                y: {
                                    beginAtZero: true
                                }
                            }
                        }
                    }
                    const chart = new Chart(ctxSentencias, configChart)
                })
                .catch(error => console.error('Error:', error));
        });
    </script>
{% endblock %}
