{% extends 'layouts/app.jinja2' %}
{% import 'macros/form.jinja2' as f with context %}
{% import 'macros/topbar.jinja2' as topbar %}

{% block title %}Editar Exhorto {{ exh_exhorto.exhorto_origen_id }}{% endblock %}

{% block custom_head %}
    <!-- Select2 bootstrap -->
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <link href="https://storage.googleapis.com/pjecz-informatica/static/css/select2.css" rel="stylesheet" />
{% endblock %}

{% block topbar_actions %}
    {% call topbar.page_buttons('Editar ' + exh_exhorto.exhorto_origen_id | string) %}
    {% endcall %}
{% endblock %}

{% block content %}
    {% call f.card() %}
        {% set form_kwargs = {'exh_exhorto_id': exh_exhorto.id} %}
        {% call f.form_tag('exh_exhortos.edit', fid='exh_exhorto_form', **form_kwargs) %}
            <div class="row">
                <div class="col-md-6">
                    {% call f.form_group(form.exhorto_origen_id, readonly=true) %}{% endcall %}
                    {% call f.form_group(form.estado_origen, readonly=true) %}{% endcall %}
                    {% call f.form_group(form.municipio_origen) %}{% endcall %}
                    {% call f.form_group(form.juzgado_origen) %}{% endcall %}
                    {% call f.form_group(form.numero_expediente_origen) %}{% endcall %}
                    {% call f.form_group(form.numero_oficio_origen) %}{% endcall %}
                    {% call f.form_group(form.tipo_juicio_asunto_delitos) %}{% endcall %}
                    {% call f.form_group(form.juez_exhortante) %}{% endcall %}
                    {% call f.form_group(form.fojas) %}{% endcall %}
                    {% call f.form_group(form.dias_responder) %}{% endcall %}
                </div>
                <div class="col-md-6">
                    {% call f.form_group(form.folio_seguimiento, readonly=true) %}{% endcall %}
                    {% call f.form_group(form.estado_destino) %}{% endcall %}
                    {% call f.form_group(form.municipio_destino) %}{% endcall %}
                    {% call f.form_group(form.materia) %}{% endcall %}
                    {% call f.form_group(form.tipo_diligencia) %}{% endcall%}
                    {% call f.form_group(form.tipo_diligenciacion_nombre) %}{% endcall %}
                    {% call f.form_group(form.fecha_origen, readonly=true) %}{% endcall %}
                    {% call f.form_group(form.observaciones) %}{% endcall %}
                </div>
            </div>
            {% call f.form_group(form.guardar) %}{% endcall %}
        {% endcall %}
    {% endcall %}
{% endblock %}

{% block custom_javascript %}
    <!-- Combo select Estados Destino - Municipios Destino -->
    <script>
        // Cargar las opciones en estado_destino
        const estadoDestinoSelect = document.getElementById('estado_destino');
        fetch('/estados/select_json')
            .then(response => response.json())
            .then(data => {
                data.forEach(estado => {
                    const option = document.createElement('option');
                    option.value = estado.id;
                    option.text = estado.nombre;
                    estadoDestinoSelect.appendChild(option);
                });
                estadoDestinoSelect.value = {{ municipio_destino.estado.id }};
                estadoDestinoSelect.dispatchEvent(new Event('change'));
            });
        // Si estado_destino cambia actualizar el select municipio_destino
        estadoDestinoSelect.addEventListener('change', () => {
            const estadoDestinoId = document.getElementById('estado_destino').value;
            fetch(`/municipios/select_json/${estadoDestinoId}`)
                .then(response => response.json())
                .then(data => {
                    const municipioDestinoSelect = document.getElementById('municipio_destino');
                    municipioDestinoSelect.innerHTML = '';
                    data.forEach(municipio => {
                        const option = document.createElement('option');
                        option.value = municipio.id;
                        option.text = municipio.nombre;
                        municipioDestinoSelect.appendChild(option);
                    });
                    municipioDestinoSelect.value = {{ exh_exhorto.municipio_destino_id }};
                });
            // Cargar las opciones en el select materia
            fetch(`/exh_externos/select_materias_json/${estadoDestinoId}`)
                .then(response => response.json())
                .then(data => {
                    const materiaSelect = document.getElementById('materia');
                    materiaSelect.innerHTML = '';
                    materiaSelect.disabled = false;
                    if (data === null) {
                        materiaSelect.disabled = true;
                        return;
                    }
                    data.forEach(materia => {
                        const option = document.createElement('option');
                        option.value = materia.clave;
                        option.text = materia.nombre;
                        materiaSelect.appendChild(option);
                    })
                    materiaSelect.value = {{ exh_exhorto.materia_clave }};
                    materiaSelect.dispatchEvent(new Event('change'));
                });
        });
    </script>
    <!-- Select municipio_origen -->
    <script>
        // Cargar las opciones en municipio_origen
        fetch(`/municipios/select_json/{{ estado_origen_id }}`)
            .then(response => response.json())
            .then(data => {
                const municipioSelect = document.getElementById('municipio_origen');
                municipioSelect.innerHTML = '';
                data.forEach(municipio => {
                    const option = document.createElement('option');
                    option.value = municipio.id;
                    option.text = municipio.nombre;
                    municipioSelect.appendChild(option);
                });
                municipioSelect.value = {{ exh_exhorto.municipio_origen_id }};
            });
    </script>
    <!-- Select tipo_diligencia -->
    <script>
        // Llamar a /exh_tipos_diligencias/select_json para cargar las opciones en el select
        fetch('/exh_tipos_diligencias/select_json')
            .then(response => response.json())
            .then(data => {
                const tipoDiligenciaSelect = document.getElementById('tipo_diligencia');
                data.forEach(tipoDiligencia => {
                    const option = document.createElement('option');
                    option.value = tipoDiligencia.id;
                    option.text = tipoDiligencia.nombre;
                    tipoDiligenciaSelect.appendChild(option);
                });
                tipoDiligenciaSelect.value = {{ exh_exhorto.tipo_diligencia_id }};
            });
    </script>
    <!-- Select2 para juzgado de origen -->
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script>
        $(document).ready(function(){
            // Select2 agregar clase
            $('#juzgado_origen').addClass('js-example-placeholder-single');
            // Select2 agregar la opcion seleccionada
            const newJuzgadoOption = new Option('{{juzgado_origen.clave}}', '{{juzgado_origen.id}}', false, false);
            $('#juzgado_origen').append(newJuzgadoOption).trigger('change');
            // Select2 consultar opciones por AJAX
            $("#juzgado_origen").select2({
                ajax: {
                    url: '/autoridades/juzgados_json',
                    headers: { "X-CSRF-TOKEN": "{{ csrf_token() }}" },
                    dataType: 'json',
                    delay: 250,
                    type: "POST",
                    data: function (params) {
                        return { 'clave': params.term.toUpperCase(), "es_jurisdiccional": true };
                    }
                },
                placeholder: "Escriba tres caracteres para buscar",
                minimumInputLength: 3,
                allowClear: true
            });
        });
    </script>
{% endblock %}
