{% extends 'layouts/app.jinja2' %}
{% import 'macros/list.jinja2' as list %}
{% import 'macros/topbar.jinja2' as topbar %}

{% block title %}{{ titulo }}{% endblock %}

{% block topbar_actions %}
    {% call topbar.page_buttons(titulo) %}
        {{ topbar.button('Mi Bandeja de Entrada', url_for('ofi_documentos.list_active_mi_bandeja_entrada'), "mdi:inbox-multiple") }}
        {% if mostrar_boton_nuevo %}
            {{ topbar.button('Mis Oficios', url_for('ofi_documentos.list_active_mis_oficios'), "mdi:file-document-edit-outline") }}
            {{ topbar.button('Mi Autoridad', url_for('ofi_documentos.list_active_mi_autoridad'), "mdi:scale-balance") }}
        {% endif %}
        {% if current_user.can_admin('OFI DOCUMENTOS') %}
            {% if estatus == 'A' %}{{ topbar.button_list_inactive('Inactivos', url_for('ofi_documentos.list_inactive')) }}{% endif %}
            {% if estatus == 'B' %}{{ topbar.button_list_active('Activos', url_for('ofi_documentos.list_active')) }}{% endif %}
        {% endif %}
        {% if mostrar_boton_nuevo and current_user.can_insert('OFI DOCUMENTOS') and current_user.can_view('OFI PLANTILLAS') %}
            {{ topbar.button_new('Nuevo Oficio desde una Plantilla', url_for('ofi_plantillas.list_active')) }}
        {% endif %}
    {% endcall %}
{% endblock %}

{% block content %}
    {% call list.card() %}
        <!-- Filtros Oficios -->
        <div class="row">
            <div class="col">
                <form class="row g-1 mb-3" id="filtradorForm" onsubmit="filtrosOficios.buscar(); return false;">
                    <div class="col-2">
                        <div class="form-floating">
                            <input id="filtroFolio" type="text" class="form-control" aria-label="Folio" style="text-transform: uppercase;">
                            <label for="filtroFolio">Folio</label>
                        </div>
                    </div>
                    <div class="col-2">
                        <div class="form-floating">
                            <input id="filtroAutoridad" type="text" class="form-control" aria-label="Autoridad" style="text-transform: uppercase;">
                            <label for="filtroAutoridad">Autoridad</label>
                        </div>
                    </div>
                    <div class="col-4">
                        <div class="form-floating">
                            <input id="filtroDescripcion" type="text" class="form-control" aria-label="DescripciÃ³n" style="text-transform: uppercase;">
                            <label for="filtroDescripcion">DescripciÃ³n</label>
                        </div>
                    </div>
                    <div class="col-2">
                        <div class="form-floating">
                            <select class="form-select" id="estadoSelect" name="estadoSelect" aria-label="Estado" onchange="filtrosOficios.buscar(); return false;" style="flex: inherit;">
                                <option selected value=""></option>
                                {% for estado in estados %}
                                    <option value="{{estado}}">{{estado}}</option>
                                {% endfor %}
                            </select>
                            <label for="estadoSelect">Estado</label>
                        </div>
                    </div>
                    <div class="col-2 text-end">
                        <button title="Buscar" class="btn btn-primary btn-lg" onclick="filtrosOficios.buscar(); return false;" id="button-buscar"><span class="iconify" data-icon="mdi:magnify"></span></button>
                        <button title="Limpiar" class="btn btn-warning btn-lg" type="reset" onclick="filtrosOficios.limpiar();" id="button-limpiar"><span class="iconify" data-icon="mdi:broom"></span></button>
                    </div>
                </form>
            </div>
        </div>
        <!-- DataTable Oficios -->
        <table id="ofi_documentos_datatable" class="table {% if estatus == 'B'%}table-dark{% endif %} display nowrap" style="width:100%">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Creado</th>
                    <th>Folio</th>
                    <th>Vencimiento</th>
                    <th>Autor</th>
                    <th>Autoridad</th>
                    <th>DescripciÃ³n</th>
                    <th>Estado</th>
                    <th>Iconos</th>
                </tr>
            </thead>
        </table>
    {% endcall %}
{% endblock %}

{% block custom_javascript %}
    <script src="/static/js/datatables-constructor.js"></script>
    <script src="/static/js/datatables-filtros.js"></script>
    <script>
        // DataTable Oficios
        const constructorDataTable = new ConfigDataTable( '{{ csrf_token() }}' );
        let configDataTable = constructorDataTable.config();
        configDataTable['ajax']['url'] = '/ofi_documentos/datatable_json';
        configDataTable['ajax']['data'] = {{ filtros }};
        configDataTable['columns'] = [
            { data: 'detalle' },
            { data: 'creado' },
            { data: 'folio' },
            { data: 'vencimiento' },
            { data: 'autor' },
            { data: 'autoridad' },
            { data: 'descripcion' },
            { data: 'estado' },
            { data: 'iconos' }
        ];
        configDataTable['columnDefs'] = [
            {
                targets: 0, // detalle
                data: null,
                render: function(data, type, row, meta) {
                    return '<a href="' + data.url + '">' + data.id.substring(0, 8) + '</a>';
                }
            },
            {
                targets: 4, // autor
                data: null,
                render: function(data, type, row, meta) {
                    if (data.email.length > 16)
                        return '<span title="' + data.nombre + '"><a href="' + data.url + '">' + data.email.substring(0, 16) + 'â€¦</a></span>';
                    return data;
                }
            },
            {
                targets: 5, // autoridad
                data: null,
                render: function(data, type, row, meta) {
                    if (data.url == "" )
                        return '<span title="' + data.nombre + '">' + data.clave + '</span>';
                    return '<span title="' + data.nombre + '"><a href="' + data.url + '">' + data.clave + '</a></span>';
                }
            },
            {
                targets: 6, // descripcion
                data: null,
                render: function(data, type, row, meta) {
                    if (data.length > 32)
                        return '<span title="' + data + '">' + data.substring(0, 32) + 'â€¦</span>';
                    return data;
                }
            },
            {
                targets: 7, // estado
                data: null,
                render: function(data, type, row, meta) {
                    let bgcolor = "bg-secondary";
                    switch (data)    {
                        case "BORRADOR":        bgcolor = "bg-warning text-dark";   break;
                        case "CANCELADO":       bgcolor = "bg-danger";              break;
                        case "FIRMADO":         bgcolor = "bg-success";             break;
                        case "ENVIADO":         bgcolor = "bg-primary";             break;
                    }
                    return '<span class="badge rounded-pill ' + bgcolor + '">' + data + '</span>';
                }
            },
            {
                targets: 8, // iconos
                data: null,
                render: function(data, type, row, meta) {
                    let iconos = '';
                    if (data.archivado)
                        iconos = '<span title="Archivado">ðŸ“¦</span>';
                    if (data.cancelado)
                        iconos += ' <span title="Cancelado">ðŸš«</span>';
                    return iconos;
                }
            }
        ];
        // Colorear renglones
        configDataTable['rowCallback'] = function( row, data )  {
            if (data.iconos.cancelado)    {
                $(row).css("background-color", "#eceff1");
            }
        };
        // Filtros Oficios
        const filtrosOficios = new FiltrosDataTable('#ofi_documentos_datatable', configDataTable);
        filtrosOficios.agregarInput('filtroFolio', 'folio');
        filtrosOficios.agregarInput('filtroAutoridad', 'autoridad');
        filtrosOficios.agregarInput('filtroDescripcion', 'descripcion');
        filtrosOficios.agregarInput('estadoSelect', 'estado');
        filtrosOficios.precargar();
    </script>
{% endblock %}
