{% extends 'layouts/app.jinja2' %}
{% import 'macros/list.jinja2' as list %}
{% import 'macros/topbar.jinja2' as topbar %}

{% block title %}{{ titulo }}{% endblock %}

{% block topbar_actions %}
    {% call topbar.page_buttons(titulo) %}
        {% if current_user.can_view("SOPORTES CATEGORIAS") %}
            {{ topbar.button('Categorías', url_for('soportes_categorias.list_active'), "mdi:car-wrench") }}
        {% endif %}
        {% if current_user.can_admin('SOPORTES TICKETS') %}
            {% if estatus == 'A' %}{{ topbar.button_list_inactive('Inactivos', url_for('soportes_tickets.list_inactive')) }}{% endif %}
            {% if estatus == 'B' %}{{ topbar.button_list_active('Activos', url_for('soportes_tickets.list_active')) }}{% endif %}
        {% endif %}
        {% if current_user.can_insert('SOPORTES TICKETS') %}
            {{ topbar.button_new('Nuevo Ticket', url_for('soportes_tickets.new')) }}
        {% endif %}
    {% endcall %}
{% endblock %}

{% block content %}
    {% call list.card() %}
        <!-- Filtros tickets -->
        <div class="row">
            <div class="col">
                <form class="row g-1 mb-3" id="filtradorForm" onsubmit="filtrosTickets.buscar(); return false;">
                    <div class="col-2">
                        <div class="form-floating">
                            <input id="filtroId" type="text" class="form-control" aria-label="Id" style="text-transform: uppercase;">
                            <label for="filtroId">Id</label>
                        </div>
                    </div>
                    <div class="col-4">
                        <div class="form-floating">
                            <input id="filtroCategoria" type="text" class="form-control" aria-label="Categoría" style="text-transform: uppercase;">
                            <label for="filtroCategoria">Categoría</label>
                        </div>
                    </div>
                    <div class="col-4">
                        <div class="form-floating">
                            <select id="filtroEstado" class="form-control" aria-label="Estado" onchange="filtrosTickets.buscar(); return false;" style="flex: inherit;">
                                <option selected value=""></option>
                                {% for estado in estados %}
                                    <option value="{{estado}}">{{estado}}</option>
                                {% endfor %}
                            </select>
                            <label for="filtroEstado">Estado</label>
                        </div>
                    </div>
                    <div class="col-2 text-end">
                        <button title="Buscar" class="btn btn-primary btn-lg" onclick="filtrosTickets.buscar(); return false;" id="button-buscar"><span class="iconify" data-icon="mdi:magnify"></span></button>
                        <button title="Limpiar" class="btn btn-warning btn-lg" type="reset" onclick="filtrosTickets.limpiar();" id="button-limpiar"><span class="iconify" data-icon="mdi:broom"></span></button>
                    </div>
                </form>
            </div>
        </div>
        <!-- DataTable tickets -->
        <table id="soportes_tickets_datatable" class="table {% if estatus == 'B'%}table-dark{% endif %} display nowrap" style="width:100%">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Descripción</th>
                    <th>Categoría</th>
                    <th>Estado</th>
                    <th>Resolución</th>
                </tr>
            </thead>
        </table>
    {% endcall %}
{% endblock %}

{% block custom_javascript %}
    <script src="/static/js/datatables-constructor.js"></script>
    <script src="/static/js/datatables-filtros.js"></script>
    <script>
        // DataTable tickets
        const constructorDataTable = new ConfigDataTable( '{{ csrf_token() }}' );
        let configDataTable = constructorDataTable.config();
        configDataTable['ajax']['url'] = '/soportes_tickets/datatable_json';
        configDataTable['ajax']['data'] = {{ filtros }};
        configDataTable['columns'] = [
            { data: 'detalle' },
            { data: 'descripcion' },
            { data: 'categoria' },
            { data: 'estado' },
            { data: 'resolucion' }
        ];
        configDataTable['columnDefs'] = [
            {
                targets: 0, // detalle
                data: null,
                render: function(data, type, row, meta) {
                    return '<a href="' + data.url + '">' + data.id + '</a>';
                }
            },
            {
                targets: 1, // descripcion
                data: null,
                render: function(data, type, row, meta) {
                    return '<span title="' + data + '">' + data.substr(0, 32) + '…' + '</span>';
                }
            },
            {
                targets: 2, // categoría
                data: null,
                render: function(data, type, row, meta) {
                    texto_corto = data.nombre;
                    if (texto_corto.length > 16 ) {
                        texto_corto = data.nombre.substr(0, 16) + '…';
                    }
                    if (data.url != "" ) { 
                        return "<a href='" + data.url + "'><span title='" + data.nombre + "'>" + texto_corto + "</span></a>";
                    } else {
                        return "<span title='" + data.nombre + "'>" + texto_corto + "</span>";
                    }
                }
            },
            {
                targets: 3, // estado
                data: null,
                render: function(data, type, row, meta) {
                    let bgcolor = "bg-dark";
                    switch (data)    {
                        case "SIN ATENDER":     bgcolor = 'bg-warning text-dark';   break;
                        case "TRABAJANDO":       bgcolor = 'bg-primary';            break;
                        case "CANCELADO":       bgcolor = 'bg-danger';              break;
                        case "TERMINADO":       bgcolor = 'bg-success';             break;
                        case "CERRADO":         bgcolor = 'bg-secondary';           break;
                    }
                    return '<span class="badge rounded-pill ' + bgcolor + '">' + data + '</span>';
                }
            },
            {
                targets: 4, // resolucion
                data: null,
                render: function(data, type, row, meta) {
                    return '<span title="' + data + '">' + data.substr(0, 32) + '…' + '</span>';
                }
            },
        ];
        // Colorear renglones
        configDataTable['rowCallback'] = function( row, data )  {
            switch (data.estado)    {
                case "SIN ATENDER":     $(row).css("background-color", "#fef9e7");  break;
                case "TRABAJANDO":      $(row).css("background-color", "#ebf5fb");  break;
                case "CANCELADO":       $(row).css("background-color", "#fdedec");  break;
                case "PENDIENTE":       $(row).css("background-color", "#f5eef8");  break;
                case "TERMINADO":       $(row).css("background-color", "#eafaf1");  break;
                case "CERRADO":         $(row).css("background-color", "#eceff1");  break;
            }
        };
        // Filtros tickets
        const filtrosTickets = new FiltrosDataTable('#soportes_tickets_datatable', configDataTable);
        filtrosTickets.agregarInput('filtroId', 'soporte_ticket_id');
        filtrosTickets.agregarInput('filtroCategoria', 'categoria');
        filtrosTickets.agregarInput('filtroEstado', 'estado');
        filtrosTickets.precargar();
    </script>
{% endblock %}
