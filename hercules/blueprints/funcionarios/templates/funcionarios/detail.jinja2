{% extends 'layouts/app.jinja2' %}
{% import 'macros/detail.jinja2' as detail %}
{% import 'macros/modals.jinja2' as modals %}
{% import 'macros/topbar.jinja2' as topbar %}

{% block title %}Funcionario {{ funcionario.nombre }}{% endblock %}

{% block topbar_actions %}
    {% call topbar.page_buttons(funcionario.nombre) %}
        {{ topbar.button_previous('Directorio', url_for('funcionarios.list_active')) }}
        {% if current_user.can_view('CENTROS TRABAJOS') %}
            {{ topbar.button('Centros de Trabajo', url_for('centros_trabajos.list_active'), 'mdi:home-group') }}
        {% endif %}
        {% if current_user.can_edit('FUNCIONARIOS') %}
            {{ topbar.button_edit('Editar', url_for('funcionarios.edit', funcionario_id=funcionario.id)) }}
        {% endif %}
        {% if current_user.can_admin('FUNCIONARIOS') %}
            {% if funcionario.estatus == 'A' %}{{ topbar.button_delete('Eliminar', url_for('funcionarios.delete', funcionario_id=funcionario.id)) }}{% endif %}
            {% if funcionario.estatus == 'B' %}{{ topbar.button_recover('Recuperar', url_for('funcionarios.recover', funcionario_id=funcionario.id)) }}{% endif %}
        {% endif %}
    {% endcall %}
{% endblock %}

{% block content %}
    <div class="row">
        <div class="col-md-6">
            {% call detail.card(estatus=funcionario.estatus) %}
                {{ detail.label_value_big('Puesto', funcionario.puesto, font_size=1.5) }}
                {{ detail.label_value('Centro de Trabajo', funcionario.centro_trabajo.nombre) }}
                {{ detail.label_value('e-mail', funcionario.email) }}
                {{ detail.label_value_big('Teléfono', funcionario.telefono, font_size=1.5) }}
                {{ detail.label_value_big('Extensión', funcionario.extension, font_size=1.5) }}
            {% endcall %}
        </div>
        <div class="col-md-6">
            {# Informacion sensible que NO esta a la vista de todos #}
            {% if current_user.can_admin('FUNCIONARIOS') %}
                {% call detail.card(estatus=funcionario.estatus) %}
                    {{ detail.label_value('CURP', funcionario.curp) }}
                    {% if current_user.can_view('CENTROS TRABAJOS') %}
                        {{ detail.label_value('Clave del Centro de Trabajo', funcionario.centro_trabajo.clave, url_for('centros_trabajos.detail', centro_trabajo_id=funcionario.centro_trabajo_id)) }}
                    {% else %}
                        {{ detail.label_value('Clave del Centro de Trabajo', funcionario.centro_trabajo.clave) }}
                    {% endif %}
                    {{ detail.label_value('Clave del puesto', funcionario.puesto_clave) }}
                    {{ detail.label_value('Domicilio oficial', funcionario.domicilio_oficial) }}
                    {{ detail.label_value('Fecha de ingreso', funcionario.ingreso_fecha) }}
                    {{ detail.label_value('Fotografía URL', funcionario.fotografia_url) }}
                {% endcall %}
            {% endif %}
        </div>
    </div>
    {# Listado Autoridades-Funcionarios #}
    {% if current_user.can_view('AUTORIDADES FUNCIONARIOS') and funcionario.en_sentencias %}
        {% call detail.card('AUTORIDADES FUNCIONARIOS') %}
            <!-- Filtros Autoridades funcionarios -->
            <div class="row">
                <div class="col">
                    <form class="row g-1 mb-3" id="filtradorForm" onsubmit="filtrosAutoridadesFuncionarios.buscar(); return false;">
                        <div class="col-4">
                            <div class="form-floating">
                                <input id="filtroAutoridadClave" type="text" class="form-control" aria-label="Autoridad Clave" style="text-transform: uppercase;">
                                <label for="filtroAutoridadClave">Autoridad Clave</label>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="form-floating">
                                <input id="filtroAutoridadDescripcion" type="text" class="form-control" aria-label="Descripción" style="text-transform: uppercase;">
                                <label for="filtroAutoridadDescripcion">Autoridad Descripción</label>
                            </div>
                        </div>
                        <div class="col-2 text-end">
                            <button title="Buscar" class="btn btn-primary btn-lg" onclick="filtrosAutoridadesFuncionarios.buscar(); return false;" id="button-buscar"><span class="iconify" data-icon="mdi:magnify"></span></button>
                            <button title="Limpiar" class="btn btn-warning btn-lg" type="reset" onclick="filtrosAutoridadesFuncionarios.limpiar();" id="button-limpiar"><span class="iconify" data-icon="mdi:broom"></span></button>
                        </div>
                    </form>
                </div>
            </div>
            <!-- DataTable Autoridades funcionarios -->
            <table id="autoridades_funcionarios_datatable" class="table display nowrap" style="width:100%">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Autoridad</th>
                        <th>Autoridad descripción corta</th>
                    </tr>
                </thead>
            </table>
            {# {% if current_user.can_insert('AUTORIDADES FUNCIONARIOS') %}
                <a href="{{ url_for('autoridades_funcionarios.new_with_funcionario', funcionario_id=funcionario.id) }}" class="btn btn-primary">Agregar</a>
            {% endif %} #}
            {% endcall %}
    {% endif %}
    {# Datatable listado Funcionarios-Oficinas #}
    {% if current_user.can_view('FUNCIONARIOS OFICINAS') and funcionario.en_soportes %}
        {% call detail.card('FUNCIONARIOS OFICINAS') %}
            <!-- Filtros Funcionarios Oficinas -->
            <div class="row">
                <div class="col">
                    <form class="row g-1 mb-3" id="filtradorForm" onsubmit="filtrosFuncinariosOficinas.buscar(); return false;">
                        <div class="col-4">
                            <div class="form-floating">
                                <input id="filtroOficinaClave" type="text" class="form-control" aria-label="Oficina clave" style="text-transform: uppercase;">
                                <label for="filtroOficinaClave">Oficina clave</label>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="form-floating">
                                <input id="filtroOficinaDescripcion" type="text" class="form-control" aria-label="Oficina descripción" style="text-transform: uppercase;">
                                <label for="filtroOficinaDescripcion">Oficina descripción</label>
                            </div>
                        </div>
                        <div class="col-2 text-end">
                            <button title="Buscar" class="btn btn-primary btn-lg" onclick="filtrosFuncinariosOficinas.buscar(); return false;" id="button-buscar"><span class="iconify" data-icon="mdi:magnify"></span></button>
                            <button title="Limpiar" class="btn btn-warning btn-lg" type="reset" onclick="filtrosFuncinariosOficinas.limpiar();" id="button-limpiar"><span class="iconify" data-icon="mdi:broom"></span></button>
                        </div>
                    </form>
                </div>
            </div>
            <!-- DataTable Funcionarios Oficinas -->
            <table id="funcionarios_oficinas_datatable" class="table {% if estatus == 'B'%}table-dark{% endif %} display nowrap" style="width:100%">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Clave</th>
                        <th>Descripción corta</th>
                    </tr>
                </thead>
            </table>
            {% if current_user.can_insert('FUNCIONARIOS OFICINAS') %}
                <a href="{{ url_for('funcionarios_oficinas.new_with_funcionario', funcionario_id=funcionario.id) }}" class="btn btn-primary">Agregar</a>
            {% endif %}
            {% if current_user.can_edit('FUNCIONARIOS OFICINAS') %}
                <a href="{{ url_for('funcionarios.clean', funcionario_id=funcionario.id) }}" class="btn btn-primary">Limpiar</a>
                <a href="{{ url_for('funcionarios.insert_offices', funcionario_id=funcionario.id) }}" class="btn btn-primary">Asignar domicilio</a>
            {% endif %}
        {% endcall %}
    {% endif %}
{% endblock %}

{% block custom_javascript %}
    {% if current_user.can_admin('FUNCIONARIOS') %}
        {% if funcionario.estatus == 'A' %}{{ modals.custom_javascript_delete('Eliminar', '¿Eliminar a ' + funcionario.nombre + '?') }}{% endif %}
        {% if funcionario.estatus == 'B' %}{{ modals.custom_javascript_recover('Recuperar', '¿Recuperar a ' + funcionario.nombre + '?') }}{% endif %}
    {% endif %}
    <script src="/static/js/datatables-constructor.js"></script>
    <script src="/static/js/datatables-filtros.js"></script>
    <script>
        const constructorDataTable = new ConfigDataTable( '{{ csrf_token() }}' );
    </script>
    {% if current_user.can_view('AUTORIDADES FUNCIONARIOS') and funcionario.en_sentencias %}
        <script>
            // DataTable Autoridades funcionarios
            let configDTAutoridadesFuncionarios = constructorDataTable.config();
            configDTAutoridadesFuncionarios['ajax']['url'] = '/autoridades_funcionarios/datatable_json';
            configDTAutoridadesFuncionarios['ajax']['data'] = { 'estatus': "A", 'funcionario_id': {{ funcionario.id}} };
            configDTAutoridadesFuncionarios['columns'] = [
                { data: "detalle" },
                { data: "autoridad" },
                { data: "autoridad_descripcion_corta" }
            ];
            configDTAutoridadesFuncionarios['columnDefs'] = [
                {
                    targets: 0, // detalle
                    data: null,
                    render: function(data, type, row, meta) {
                        return '<a href="' + data.url + '">' + data.id + '</a>';
                    }
                },
                {
                    targets: 1, // autoridad
                    data: null,
                    render: function(data, type, row, meta) {
                        if (data.url == '') {
                            return data.clave;
                        } else {
                            return '<a href="' + data.url + '">' + data.clave + '</a>';
                        }
                    }
                }
            ];
            // Filtros Autoridades funcionarios
            const filtrosAutoridadesFuncionarios = new FiltrosDataTable('#autoridades_funcionarios_datatable', configDTAutoridadesFuncionarios);
            filtrosAutoridadesFuncionarios.agregarInput('filtroAutoridadClave', 'autoridad_clave');
            filtrosAutoridadesFuncionarios.agregarInput('filtroAutoridadDescripcion', 'autoridad_descripcion');
            filtrosAutoridadesFuncionarios.precargar();
        </script>
    {% endif %}
    {% if current_user.can_view('FUNCIONARIOS OFICINAS') and funcionario.en_soportes %}
        <script>
            // DataTable Funcionarios Oficinas
            let configDTFuncionariosOficinas = constructorDataTable.config();
            configDTFuncionariosOficinas['ajax']['url'] = '/funcionarios_oficinas/datatable_json';
            configDTFuncionariosOficinas['ajax']['data'] = { 'estatus': "A", 'funcionario_id': {{ funcionario.id}} };
            configDTFuncionariosOficinas['columns'] = [
                { data: 'detalle' },
                { data: 'oficina' },
                { data: 'oficina_descripcion_corta' }
            ];
            configDTFuncionariosOficinas['columnDefs'] = [
                {
                    targets: 0, // detalle
                    data: null,
                    render: function(data, type, row, meta) {
                        return '<a href="' + data.url + '">' + data.id + '</a>';
                    }
                },
                {
                    targets: 1, // oficina
                    data: null,
                    render: function(data, type, row, meta) {
                        return '<a href="' + data.url + '">' + data.clave + '</a>';
                    }
                },
            ];
            // Filtros Funcionarios Oficinas
            const filtrosFuncinariosOficinas = new FiltrosDataTable('#funcionarios_oficinas_datatable', configDTFuncionariosOficinas);
            filtrosFuncinariosOficinas.agregarInput('filtroOficinaClave', 'oficina_clave');
            filtrosFuncinariosOficinas.agregarInput('filtroOficinaDescripcion', 'oficina_descripcion');
            filtrosFuncinariosOficinas.precargar();
        </script>
    {% endif %}
{% endblock %}
