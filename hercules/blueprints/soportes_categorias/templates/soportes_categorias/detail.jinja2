{% extends 'layouts/app.jinja2' %}
{% import 'macros/detail.jinja2' as detail %}
{% import 'macros/modals.jinja2' as modals %}
{% import 'macros/topbar.jinja2' as topbar %}
{% import 'macros/list.jinja2' as list %}

{% block title %}Soporte Categoría {{ categoria.id }}{% endblock %}

{% block topbar_actions %}
    {% call topbar.page_buttons('Soporte Categoría ' + categoria.id | string) %}
        {{ topbar.button_previous('Soportes Categorías', url_for('soportes_categorias.list_active')) }}
        {% if current_user.can_edit('SOPORTES CATEGORIAS') %}
            {{ topbar.button_edit('Editar', url_for('soportes_categorias.edit', soporte_categoria_id=categoria.id)) }}
        {% endif %}
        {% if current_user.can_admin('SOPORTES CATEGORIAS') %}
            {% if categoria.estatus == 'A' %}{{ topbar.button_delete('Eliminar', url_for('soportes_categorias.delete', soporte_categoria_id=categoria.id)) }}{% endif %}
            {% if categoria.estatus == 'B' %}{{ topbar.button_recover('Recuperar', url_for('soportes_categorias.recover', soporte_categoria_id=categoria.id)) }}{% endif %}
        {% endif %}
    {% endcall %}
{% endblock %}

{% block content %}
    {% call detail.card(estatus=categoria.estatus) %}
        {{ detail.label_value_big('Nombre', categoria.nombre) }}
        {{ detail.label_value('Atendido Por', categoria.rol.nombre) }}
        {{ detail.label_value('Departamento', categoria.departamento) }}
        <div class="row">
            <div class="col-md-3 text-end">Instrucciones</div>
            <div class="col-md-9">
                <pre>{{ categoria.instrucciones }}</pre>
            </div>
        </div>
    {% endcall %}
    <!-- Listado de tickets -->
    {% if current_user.can_admin('SOPORTES CATEGORIAS') %}
        {% call list.card('Tickets') %}
        <!-- Filtros tickets -->
        <div class="row">
            <div class="col">
                <form class="row g-1 mb-3" id="filtradorForm" onsubmit="filtrosTickets.buscar(); return false;">
                    <div class="col-4">
                        <div class="form-floating">
                            <input id="filtroId" type="text" class="form-control" aria-label="Id" style="text-transform: uppercase;">
                            <label for="filtroId">Id</label>
                        </div>
                    </div>
                    <div class="col-8">
                        <div class="form-floating">
                            <input id="filtroUsuario" type="text" class="form-control" aria-label="Usuario" style="text-transform: uppercase;">
                            <label for="filtroUsuario">Usuario</label>
                        </div>
                    </div>
                    <div class="col-5">
                        <div class="form-floating">
                            <input id="filtroOficina" type="text" class="form-control" aria-label="Oficina" style="text-transform: uppercase;">
                            <label for="filtroOficina">Oficina</label>
                        </div>
                    </div>
                    <div class="col-5">
                        <div class="form-floating">
                            <select id="filtroEstado" class="form-control" aria-label="Estado" onchange="filtrosTickets.buscar(); return false;" style="flex: inherit;">
                                <option selected value=""></option>
                                {% for estado in estados %}
                                    <option value="{{estado}}">{{estado}}</option>
                                {% endfor %}
                            </select>
                            <label for="filtroEstado">Estado</label>
                        </div>
                    </div>
                    <div class="col-2 text-end">
                        <button title="Buscar" class="btn btn-primary btn-lg" onclick="filtrosTickets.buscar(); return false;" id="button-buscar"><span class="iconify" data-icon="mdi:magnify"></span></button>
                        <button title="Limpiar" class="btn btn-warning btn-lg" type="reset" onclick="filtrosTickets.limpiar();" id="button-limpiar"><span class="iconify" data-icon="mdi:broom"></span></button>
                    </div>
                </form>
            </div>
        </div>
        <!-- DataTable tickets -->
            <table id="soportes_tickets_datatable" class="table display nowrap" style="width:100%;">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Creación</th>
                        <th>Usuario</th>
                        <th>Oficina</th>
                        <th>Estado</th>
                        <th>Técnico</th>
                        <th>Descripción</th>
                        <th>Solución/Cancelación</th>
                    </tr>
                </thead>
            </table>
        {% endcall %}
    {% endif %}
{% endblock %}

{% block custom_javascript %}
    {% if current_user.can_admin('SOPORTES CATEGORIAS') %}
        {% if categoria.estatus == 'A' %}{{ modals.custom_javascript_delete('Eliminar', '¿Eliminar categoría ' + categoria.id | string + '?') }}{% endif %}
        {% if categoria.estatus == 'B' %}{{ modals.custom_javascript_recover('Recuperar', '¿Recuperar categoría ' + categoria.id | string + '?') }}{% endif %}
    {% endif %}
    {{ detail.moment_js(moment) }}
    <script src="/static/js/datatables-constructor.js"></script>
    <script src="/static/js/datatables-filtros.js"></script>
    <script>
        // DataTable tickets
        const constructorDataTable = new ConfigDataTable( '{{ csrf_token() }}' );
        let configDataTable = constructorDataTable.config();
        configDataTable['ajax']['url'] = '/soportes_tickets/datatable_json';
        configDataTable['ajax']['data'] = { "estatus": "A", "categoria_id": {{categoria.id}} };
        configDataTable['columns'] = [
            { data: 'detalle' },
            { data: 'creacion' },
            { data: 'usuario' },
            { data: 'oficina' },
            { data: 'estado' },
            { data: 'tecnico' },
            { data: 'descripcion' },
            { data: 'solucion' }
        ];
        configDataTable['columnDefs'] = [
            {
                targets: 0, // detalle
                data: null,
                render: function(data, type, row, meta) {
                    return '<a href="' + data.url + '">' + data.id + '</a>';
                }
            },
            {
                targets: 2, // usuario
                data: null,
                render: function(data, type, row, meta) {
                    texto_corto = data.nombre;
                    if (texto_corto.length > 24 ) {
                        texto_corto = data.nombre.substr(0, 24) + '…';
                    }
                    if (data.url != "" )
                        return "<a href='" + data.url + "'><span title='" + data.nombre + "'>" + texto_corto + "</span></a>";
                    else
                        return "<span title='" + data.nombre + "'>" + texto_corto + "</span>";
                }
            },
            {
                targets: 3, // oficina
                data: null,
                render: function(data, type, row, meta) {
                    if (data.url != "" ) { 
                        return "<a href='" + data.url + "'><span title='" + data.nombre + "'>" + data.clave + "</span></a>";
                    } else {
                        return "<span title='" + data.nombre + "'>" + data.clave + "</span>";
                    }
                }
            },
            {
                targets: 4, // estado
                data: null,
                render: function(data, type, row, meta) {
                    let bgcolor = "bg-dark";
                    switch (data)    {
                        case "SIN ATENDER":     bgcolor = 'bg-warning text-dark';   break;
                        case "TRABAJANDO":       bgcolor = 'bg-primary';            break;
                        case "CANCELADO":       bgcolor = 'bg-danger';              break;
                        case "TERMINADO":       bgcolor = 'bg-success';             break;
                        case "CERRADO":         bgcolor = 'bg-secondary';           break;
                    }
                    return '<span class="badge rounded-pill ' + bgcolor + '">' + data + '</span>';
                }
            },
            {
                targets: 5, // tecnico
                data: null,
                render: function(data, type, row, meta) {
                    texto_corto = data.nombre;
                    if (texto_corto.length > 24 ) {
                        texto_corto = data.nombre.substr(0, 24) + '…';
                    }
                    if (data.url != "" )
                        return "<a href='" + data.url + "'><span title='" + data.nombre + "'>" + texto_corto + "</span></a>";
                    else
                        return "<span title='" + data.nombre + "'>" + texto_corto + "</span>";
                }
            },
            {
                targets: 6, // descripcion
                data: null,
                render: function(data, type, row, meta) {
                    return '<span title="' + data + '">' + data.substr(0, 32) + '…' + '</span>';
                }
            },
            {
                targets: 7, // solucion
                data: null,
                render: function(data, type, row, meta) {
                    return '<span title="' + data + '">' + data.substr(0, 32) + '…' + '</span>';
                }
            },
        ];
        // Colorear renglones
        configDataTable['rowCallback'] = function( row, data )  {
            switch (data.estado)    {
                case "SIN ATENDER":     $(row).css("background-color", "#fef9e7");  break;
                case "TRABAJANDO":      $(row).css("background-color", "#ebf5fb");  break;
                case "CANCELADO":       $(row).css("background-color", "#fdedec");  break;
                case "PENDIENTE":       $(row).css("background-color", "#f5eef8");  break;
                case "TERMINADO":       $(row).css("background-color", "#eafaf1");  break;
                case "CERRADO":         $(row).css("background-color", "#eceff1");  break;
            }
        };
        // Filtros tickets
        const filtrosTickets = new FiltrosDataTable('#soportes_tickets_datatable', configDataTable);
        filtrosTickets.agregarInput('filtroId', 'soporte_ticket_id');
        filtrosTickets.agregarInput('filtroUsuario', 'usuario');
        filtrosTickets.agregarInput('filtroOficina', 'oficina');
        filtrosTickets.agregarInput('filtroEstado', 'estado');
        filtrosTickets.precargar();
    </script>
{% endblock %}
