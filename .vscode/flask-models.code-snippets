{
  "Flask models": {
    "scope": "python",
    "prefix": "fmodels",
    "body": [
      "\"\"\"",
      "${1:Modulos}, modelos",
      "\"\"\"",
      "",
      "from typing import List, Optional",
      "",
      "from sqlalchemy import Boolean, Column, ForeignKey, Integer, String",
      "from sqlalchemy.orm import Mapped, mapped_column, relationship",
      "",
      "from lib.universal_mixin import UniversalMixin",
      "from hercules.extensions import database",
      "",
      "",
      "class ${2:Clase}(database.Model, UniversalMixin):",
      "\t\"\"\" ${2:Clase} \"\"\"",
      "",
      "\t# Nombre de la tabla",
      "\t__tablename__ = '${3:tabla}'",
      "",
      "\t# Clave primaria",
      "\tid: Mapped[int] = mapped_column(primary_key=True)",
      "",
      "\t# Columnas",
      "\tclave: Mapped[str] = mapped_column(String(16), unique=True)",
      "\tdescripcion: Mapped[str] = mapped_column(String(256))",
      "\tcantidad: Mapped[int]",
      "\tes_adulto_mayor: Mapped[bool] = mapped_column(default=False)",
      "\testado: Mapped[str] = mapped_column(Enum(*ESTADOS, name=\"${3:tabla}_estados\", native_enum=False), index=True)",
      "\tobservaciones: Mapped[Optional[str]] = mapped_column(String(1024))",
      "",
      "\tdef __repr__(self):",
      "\t\t\"\"\" Representación \"\"\"",
      "\t\treturn f'<${2:Clase} {self.id}>'",
      ""
    ],
    "description": "Contenido inicial para modelos"
  },
  "Flask models foreign key": {
    "scope": "python",
    "prefix": "fmodels_clave_foranea",
    "body": [
      "# Clave foránea",
      "${1:clave_foranea}_id: Mapped[int] = mapped_column(ForeignKey(\"${2:tabla_clave_foranea}.id\"))",
      "${1:clave_foranea}: Mapped[\"${3:Clase_clave_foranea}\"] = relationship(back_populates=\"${4:plural_esta_clase}\")",
      ""
    ],
    "description": "Clave foránea"
  },
  "Flask models child": {
    "scope": "python",
    "prefix": "fmodels_hijo",
    "body": "${1:plural_hijos}: Mapped[List[\"${2:Clase_hijo}\"]] = relationship(back_populates=\"${3:singular_esta_clase}\")",
    "description": "Hijo"
  }
}
